name: Docker Image && Deploy Production CI/CD

on:
  push:
    paths-ignore:
      - '!README.md'
    branches:
      - "main"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Fetch main branch
        run: git fetch origin main

      - name: Get previous commit
        id: prev_commit
        run: echo "::set-output name=commit::$(git rev-parse origin/main~1)"

      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESSTOKEN }}

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3.6.1
        id: buildx

      - name: Cache Docker layers
        uses: actions/cache@v4.0.2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Check for changes in admin-backend
        id: changes_docker_admin_backend
        run: |
          if git diff --quiet ${{ steps.prev_commit.outputs.commit }} HEAD ./admin-backend; then
            echo "no changes"
            echo "::set-output name=changed::false"
          else
            echo "changes detected"
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker admin-backend
        if: steps.changes_docker_admin_backend.outputs.changed == 'true'
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./admin-backend
          file: ./admin-backend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/admin-backend-marketplace:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          
      - name: Build and push Docker nginx-admin-backend
        if: steps.changes_docker_admin_backend.outputs.changed == 'true'
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./admin-backend
          file: ./admin-backend/nginx.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/nginx-admin-backend-marketplace:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache


      - name: Check for changes in client-backend
        id: changes_docker_client_backend
        run: |
          if git diff --quiet ${{ steps.prev_commit.outputs.commit }} HEAD ./client-backend; then
            echo "no changes"
            echo "::set-output name=changed::false"
          else
            echo "changes detected"
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker client-backend
        if: steps.changes_docker_client_backend.outputs.changed == 'true'
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./client-backend
          file: ./client-backend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/client-backend-marketplace:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push Docker nginx-client-backend
        if: steps.changes_docker_client_backend.outputs.changed == 'true'
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./client-backend
          file: ./client-backend/nginx.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/nginx-client-backend-marketplace:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

    
      - name: Check for changes in admin-frontend
        id: changes_docker_admin_frontend
        run: |
          if git diff --quiet ${{ steps.prev_commit.outputs.commit }} HEAD ./admin-frontend; then
            echo "no changes"
            echo "::set-output name=changed::false"
          else
            echo "changes detected"
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker admin-frontend
        if: steps.changes_docker_admin_frontend.outputs.changed == 'true'
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./admin-frontend
          file: ./admin-frontend/prod.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/admin-frontend-marketplace:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VITE_APP_API=${{ secrets.VITE_APP_API_ADMIN }}
            VITE_APP_LOGO_URL=${{ secrets.VITE_APP_LOGO_URL_ADMIN }}


      - name: Check for changes in client-frontend
        id: changes_docker_client_frontend
        run: |
          if git diff --quiet ${{ steps.prev_commit.outputs.commit }} HEAD ./admin-frontend; then
            echo "no changes"
            echo "::set-output name=changed::false"
          else
            echo "changes detected"
            echo "::set-output name=changed::true"
          fi

      - name: Build and push Docker client-frontend
        if: steps.changes_docker_client_frontend.outputs.changed == 'true'
        uses: docker/build-push-action@v6.7.0
        with:
          context: ./client-frontend
          file: ./client-frontend/prod.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/client-frontend-marketplace:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            VITE_APP_API=${{ secrets.VITE_APP_API_CLIENT }}
            VITE_APP_ENCRYPT_KEY=${{ secrets.CRYPTO_KEY }}
            VITE_APP_HMAC_KEY=${{ secrets.CRYPTO_HMAC_KEY }}

  prebuild-container:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SCP docker-compose
        run: |
          scp -o StrictHostKeyChecking=no ./docker-compose.prod.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_SERVER }}:/home/chinhdev/websites/marketplace-demo.chinh.dev
      
      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_SERVER }} '/home/chinhdev/websites/marketplace-demo.chinh.dev/auto-deploy.sh' 